name: Ubuntu

on:
  push:
    branches: [ release, develop ]
  pull_request:
    push:
      branches-ignore: develop
    pull_request:
      branches-ignore: develop

jobs:
  CI_Tests:
    permissions:
      actions: none
      checks: none
      contents: none
      deployments: none
      issues: none
      packages: none
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
    strategy:
      fail-fast: false
      matrix:
        cpp_version: [ 17, 20 ]
        build_type: [ Debug, Release ]
        os: [ ubuntu-20.04 ]
        toolset: [ g++-9, g++-10, clang++-8, clang++-9, clang++-10, clang++-11, clang++-12, clang++-13 ]
    runs-on: ${{ matrix.os }}
    name: "${{ matrix.os }} ${{ matrix.toolset }} ${{ matrix.cpp_version }} ${{ matrix.build_type }}"
    steps:
      - uses: actions/checkout@v1

      - name: Setup APT and Base Dependencies
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo apt-add-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main'
          sudo apt-add-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main'
          sudo apt-udate
          sudo apt install ninja-build libunwind-dev
      - name: Clang Dependencies
        if: startsWith( ${{matrix.toolset}}, 'clang' )
        run: |
          daw_clang_ver = $(echo ${{matrix.toolset}} | cut -d- -f2)
          sudo apt install clang-$daw_clang_ver libc++-$daw_clang_ver-dev libc++abi-$daw_clang_ver-dev  ${{matrix.toolset}}
      - name: GCC Dependencies
        if: startsWith( ${{matrix.toolset}}, 'g++' )
        run: |
          daw_gcc_ver = $(echo ${{matrix.toolset}} | cut -d- -f2)
          sudo apt install gcc-$daw_clang_ver g++-$daw_clang_ver
      - name: Create Build
        run: |
          mkdir build
      - name: Build Dependencies
        env:
          CXX: ${{ matrix.toolset }}
        run: cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DDAW_NUM_RUNS=1 -DDAW_ENABLE_TESTING=ON -DDAW_WERROR=ON -DDAW_ALLOW_SSE42=ON -DDAW_JSON_USE_SANITIZERS=ON -DDAW_NO_FLATTEN=ON -DCMAKE_CXX_STANDARD=${{ matrix.cpp_version }} -Bbuild/ .
      - name: Build
        run: cmake --build build/ --target full
      - name: Test
        run: ctest -C ${{ matrix.build_type }} -j2 -VV --timeout 1200 --test-dir build/
#
#  ubuntu2004_clang13_debug_20_libcxx:
#  runs-on: [ ubuntu-20.04 ]
#  steps:
#    - uses: actions/checkout@v1
#    - name: Add LLVM Repo
#      run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#    - name: Download & Build Dependencies
#      run: |
#        sudo apt update
#        sudo apt install clang-13 libc++-13-dev libc++abi-13-dev libunwind-dev ninja-build
#    - name: Build Dependencies
#      run: ./ci_scripts/ci_ubuntu_deps.sh Debug 20 clang-13 clang++-13 "-stdlib=libc++ -Wno-reserved-identifier"
#    - name: Build
#      run: ./ci_scripts/ci_ubuntu_build.sh Debug
#    - name: Test
#      run: ./ci_scripts/ci_ubuntu_test.sh Debug
#
#  ubuntu2004_clang13_release_20_libcxx:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-13 libc++-13-dev libc++abi-13-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 20 clang-13 clang++-13 "-stdlib=libc++ -Wno-reserved-identifier"
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#  ubuntu2004_clang12_debug_20:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-12 libc++-12-dev libc++abi-12-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 20 clang-12 clang++-12
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#      - name: Run fuzz test
#        run: ./ci_scripts/ci_ubuntu_fuzz.sh
#      - name: Archive any crashes as an artifact
#        uses: actions/upload-artifact@v2
#        if: always()
#        with:
#          name: crashes
#          path: |
#            crash-*
#            leak-*
#            timeout-*
#          if-no-files-found: ignore
#  ubuntu2004_clang12_release_20:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-12 libc++-12-dev libc++abi-12-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 20 clang-12 clang++-12
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#      - name: Run fuzz test
#        run: ./ci_scripts/ci_ubuntu_fuzz.sh
#      - name: Archive any crashes as an artifact
#        uses: actions/upload-artifact@v2
#        if: always()
#        with:
#          name: crashes
#          path: |
#            crash-*
#            leak-*
#            timeout-*
#          if-no-files-found: ignore
#  ubuntu2004_clang12_debug_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-12 libc++-12-dev libc++abi-12-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 clang-12 clang++-12
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_clang12_release_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-12 libc++-12-dev libc++abi-12-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 17 clang-12 clang++-12
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#  ubuntu2004_clang12_debug_noexcept17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-12 libc++-12-dev libc++abi-12-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 clang-12 clang++-12 " -fno-exceptions"
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_clang12_debug_noexcept20:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-12 libc++-12-dev libc++abi-12-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 20 clang-12 clang++-12 " -fno-exceptions"
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_clang11_debug_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-11 libc++-11-dev libc++abi-11-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 clang-11 clang++-11
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_clang11_release_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-11 libc++-11-dev libc++abi-11-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 17 clang-11 clang++-11
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#  ubuntu2004_clang10_debug_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-10 libc++-10-dev libc++abi-10-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 clang-10 clang++-10
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_clang10_release_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-10 libc++-10-dev libc++abi-10-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 17 clang-10 clang++-10
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#  ubuntu2004_clang9_debug_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-9 libc++-9-dev libc++abi-9-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 clang-9 clang++-9
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_clang9_release_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-9 libc++-9-dev libc++abi-9-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 17 clang-9 clang++-9
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#  ubuntu2004_clang8_debug_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-8 libc++-8-dev libc++abi-8-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 clang-8 clang++-8
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_clang8_release_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Add LLVM Repo
#        run: sudo sh ./ci_scripts/ci_ubuntu_install_clang.sh
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install clang-8 libc++-8-dev libc++abi-8-dev libunwind-dev ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 17 clang-8 clang++-8
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#
#  ubuntu2004_gcc10_debug_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install gcc-10 g++-10 ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 gcc-10 g++-10
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_gcc10_release_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install gcc-10 g++-10 ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 17 gcc-10 g++-10
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#  ubuntu2004_gcc10_debug_20:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install gcc-10 g++-10 ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 20 gcc-10 g++-10
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_gcc10_release_20:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install gcc-10 g++-10 ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 20 gcc-10 g++-10
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#  ubuntu2004_gcc9_debug_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install gcc-9 g++-9 ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Debug 17 gcc-9 g++-9
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Debug
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Debug
#  ubuntu2004_gcc9_release_17:
#    runs-on: [ ubuntu-20.04 ]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download & Build Dependencies
#        run: |
#          sudo apt update
#          sudo apt install gcc-9 g++-9 ninja-build
#      - name: Build Dependencies
#        run: ./ci_scripts/ci_ubuntu_deps.sh Release 17 gcc-9 g++-9
#      - name: Build
#        run: ./ci_scripts/ci_ubuntu_build.sh Release
#      - name: Test
#        run: ./ci_scripts/ci_ubuntu_test.sh Release
#