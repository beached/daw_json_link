name: Windows
on:
  push:
    branches: [ release ]
  pull_request:
    push:
      branches-ignore: develop
    pull_request:
      branches-ignore: develop

jobs:
  CI_Tests:
    permissions:
      actions: none
      checks: none
      contents: none
      deployments: none
      issues: none
      packages: none
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none

    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
      matrix:
        cpp_version: [ 17, 20 ]
        build_type: [ Debug, Release ]
        arch: [ x64, Win32 ]
        os: [ windows-2019, windows-2022 ]
        toolset: [ MSVC, ClangCL ]
    runs-on: ${{ matrix.os }}
    name: "${{ matrix.os }} ${{ matrix.toolset }} ${{ matrix.cpp_version }} ${{ matrix.arch }} ${{ matrix.build_type }}"
    env:
      DAW_BUILD_DIR: "build_${{ matrix.cpp_version }}_${{ matrix.arch }}_${{ matrix.build_type }}_${{ matrix.toolset }}"
    steps:
      - uses: actions/checkout@v1
      - name: "Using MSVC"
        if: matrix.toolset == 'MSVC'
        run: echo "Using MSVC"
        env:
          DAW_TOOLSET_CMD: ""
      - name: "Using ClangCL"
        if: matrix.toolset == 'ClangCL'
        run: echo "Using ClangCL"
        env:
          DAW_TOOLSET_CMD: "-T ClangCL"
      - name: Set Cmake Binary Path 2019
        if: matrix.os == 'windows-2019'
        run: |
          echo "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\" >> $GITHUB_PATH
      - name: Set Cmake Binary Path 2022
        if: matrix.os == 'windows-2022'
        run: |
          echo "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\" >> $GITHUB_PATH
      - name: Setup Build Environment
        run: |
          md ${{ env.DAW_BUILD_DIR }}
      - name: CMake Config
        run: cmake.exe -GNinja ${{ env.DAW_TOOLSET_CMD }} -A ${{ matrix.arch }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_STANDARD=${{ matrix.cpp_version }} -DDAW_NUM_RUNS=1 -DDAW_ENABLE_TESTING=On -DDAW_WERROR=ON -B${{ env.DAW_BUILD_DIR }}/ .
      - name: Build
        run: cmake.exe --build ${{ env.DAW_BUILD_DIR }}/ --target full
      - name: Test
        run: cmake.exe -C ${{ matrix.build_type }} -j2 -VV --timeout 1200 --test-dir ${{ env.DAW_BUILD_DIR }}/
      - name: Archive any crashes as an artifact
        uses: actions/upload-artifact@v2
        if: always( )
        with:
          name: crashes
          path: |
            crash-*
            leak-*
            timeout-*
            **/LastTest.log
          if-no-files-found: ignore
